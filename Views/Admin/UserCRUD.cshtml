@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@model List<BrixCustomer>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject RoleManager<IdentityRole> RoleManager

<table class="table table-bordered">
    <thead class="fw-bold">
    <tr>
        <td>Customer ID</td>
        <td>Full Name</td>
        <td>Age</td>
        <td>Birth Date</td>
        <td>Gender</td>
        <td>Country of Residence</td>
        <td>Email</td>
        <td>Role</td>

    </tr>
    </thead>

    @foreach (var x in Model)
    {
        <tbody>
        <tr>
            <td>@x.CustomerId</td>
            <td>@x.LastName, @x.FirstName</td>
            <td>@x.Age</td>
            <td>@x.BirthDate</td>
            <td>@x.Gender</td>
            <td>@x.CountryOfResidence</td>
            <td>@x.Email</td>
            @if (@x.Email != null)
            {
                <td>
                    @{
                        var user = await UserManager.FindByEmailAsync(x.Email);
                        var roles = await UserManager.GetRolesAsync(user);
                        <ul>
                            @foreach (var role in roles)
                            {
                                <li>@role</li>
                            }
                        </ul>}
                </td>
            }
            else
            {
               <td>None</td> 
            }
            



            <td><a class="btn btn-toolbar" asp-controller="Admin" asp-action="EditUser" asp-route-id="@x.CustomerId">Edit</a></td> 
            <td><a class="btn btn-danger" asp-controller="Admin" asp-action="DeleteUser" asp-route-id ="@x.CustomerId">Delete</a></td> 
    
        </tr>
        </tbody>
    }




</table>

@section Scripts {

}