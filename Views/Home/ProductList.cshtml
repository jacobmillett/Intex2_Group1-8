@{
    ViewBag.Title = "Products Catalog";
}
@model ProductsListViewModel

<style>
    body {
        background: linear-gradient(to bottom, #10004E, #55439E);
        color: white;
    }

    .card {
        margin-bottom: 30px; /* Add margin between cards */
        transition: box-shadow 0.3s ease; /* Add transition effect to box-shadow property */
        color: black;
        height: 300px;
        padding: 15px; /* Set padding inside the card */
        display: flex; /* Use flexbox for card layout */
        flex-direction: column; /* Stack elements vertically */
        justify-content: space-between; /* Distribute space between elements */
    }

        .card:hover {
            box-shadow: 0 0 30px rgba(0, 0, 0, 0.5); /* Change box-shadow on hover */
        }

    .card-header {
        text-align: center;
        background-color: transparent;
    }

    .card-body {
        display: flex; /* Use flexbox for body layout */
        justify-content: space-around; /* Align image and price/button on opposite ends */
        align-items: flex-end; /* Align items to the bottom */
    }

    .price-button-container {
        display: flex; /* Use flexbox for price and button layout */
        flex-direction: column; /* Stack price and button vertically */
        align-items: center; /* Center items in the column */
        margin-bottom: 15px; /* Add space at the bottom if needed */
    }

    h1 {
        text-align: center; /* Centers the title text */
        margin-bottom: 20px; /* Adds some space below the title */
        background-color: #01bf74;
        margin-bottom: 30px;
    }

    .price-tag {
        margin-bottom: 20px; /* Add space between price and button */
        font-size: 25px; /* Set the font size to 20px */
        font-weight: bold; /* Make the font weight bold */
    }

    .card-title {
        font-size: 20px;
        font-weight: bold;
    }

    .container .pagination-container.left-margin {
        margin-left: 30px;
        background-color: grey;
        width: auto;
        display: inline-block; 
    }

    .filter-row {
        display: flex; /* Enables flexbox layout */
        justify-content: space-around; /* Distributes space evenly around items */
        margin-bottom: 20px; /* Adds space below the row */
        padding: 10px 0; /* Padding for better visual appearance */
    }

    select {
        width: 150px; /* Ensures all dropdowns are the same width */
    }

</style>

<div class="px-0 text-center">
    <img src="~/content/images/Logo-Banner.webp" alt="A banner image of the logo" style="width: 400px; display: block; margin: auto;">
</div>

<div>
    <h1 style="">@ViewBag.Title</h1>
</div>
<div>
</div>

@* <div class="container">
    <form method="get" action="@Url.Action("ProductList", "Home")">
        <label for="pageSize">Results per page:</label>
        <select name="pageSize" onchange="this.form.submit()">
            <option value="5" current>5</option>
            <option value="10">10</option>
            <option value="20">20</option>
        </select>
        <input type="hidden" name="pageNum" value="@Model.PaginationInfo.CurrentPage" />
    </form>
   
</div> *@




<div class="container" style="justify-content: space-between;">
    @using (Html.BeginForm("ProductList", "Home", FormMethod.Get))
    {
        <div class="filter-row">
            <div>
                <label for="category">Category:</label>
                @Html.DropDownListFor(m => m.SelectedCategory, Model.Categories, "Select Category", new { onchange = "this.form.submit();", @class = "form-control" })
            </div>
            <div>
                <label for="primaryColor">Primary Color:</label>
                @Html.DropDownListFor(m => m.SelectedPrimaryColor, Model.PrimaryColors, "Select Color", new { onchange = "this.form.submit();", @class = "form-control" })
            </div>
            <div>
                <label for="pageSize">Results per page:</label>
                <select name="pageSize" onchange="this.form.submit()" class="form-control">
                    <option value="5" current>5</option>
                    <option value="10">10</option>
                    <option value="20">20</option>
                </select>
                <input type="hidden" name="pageNum" value="@Model.PaginationInfo.CurrentPage" />
            </div>
        </div>
    }
</div>






<div class="container">
    <div class="pb-3">
        <!-- Start a new row for your products -->
        <div class="row">
            @foreach (BrixProduct p in Model.Products)
            {
                <!-- Each product takes up 6 columns in medium to large screens, making it 2 products per row -->
                <div class="col-md-6 mb-3">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title">@p.Name</h5>
                        </div>
                        <div class="card-body">
                            <a href="@Url.Action("ProductDetail", "Home", new { ProductId = p.ProductId })" style="text-decoration: none; color: inherit;">
                                <div style="width: 200px; height: 200px; overflow: hidden; border-radius: 5px;">
                                    <img src="@p.ImgLink" alt="@p.Name" style="width: 100%; height: 100%; object-fit: cover; border: 2px solid black;">
                                </div>
                            </a>
                            <div class="price-button-container">
                                <span class="price-tag">@($"${p.Price:F2}")</span>
                                <form asp-action="AddToCart" method="post">
                                    <input type="hidden" name="productId" value="@p.ProductId" />
                                    <input type="hidden" name="returnUrl" value="@ViewContext.HttpContext.Request.Path" />
                                    <button type="submit" class="btn btn-primary">Add to Cart</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
    <div class="pagination-container left-margin">
        <div page-model="@Model.PaginationInfo" page-action="ProductList" page-classes-enabled="true" page-class="btn"
             page-class-normal="btn-outline-dark" page-class-selected="btn-secondary" class="btn-group ml-2"></div>
    </div>
</div>









<br />

